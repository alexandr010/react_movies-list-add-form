{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","titleCheck","imgUrlCheck","imdbUrlCheck","imdbIdCheck","resetForm","setState","handleChange","event","target","name","value","handleSubmit","preventDefault","movesObj","props","onAddMovie","onSubmit","this","required","placeholder","onInvalid","type","onChange","cols","rows","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.691349c7.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { Component } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAddMovie: (movie: Movie) => void,\n};\n\ntype State = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n  titleCheck: boolean,\n  imgUrlCheck: boolean,\n  imdbUrlCheck: boolean,\n  imdbIdCheck: boolean,\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    titleCheck: false,\n    imgUrlCheck: false,\n    imdbUrlCheck: false,\n    imdbIdCheck: false,\n  };\n\n  resetForm = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      titleCheck: false,\n      imgUrlCheck: false,\n      imdbUrlCheck: false,\n      imdbIdCheck: false,\n    });\n  };\n\n  handleChange = (event: { target: { name: string; value: string; }; }) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    } as unknown as Pick<State, keyof State>);\n  };\n\n  handleSubmit = (event: { preventDefault: () => void; }) => {\n    event.preventDefault();\n    const movesObj = { ...this.state };\n\n    this.props.onAddMovie(movesObj);\n    this.resetForm();\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className=\"form\">\n        <input\n          className=\"form-input\"\n          required\n          name=\"title\"\n          placeholder=\"Title\"\n          onInvalid={() => (\n            this.setState(state => ({\n              titleCheck: !state.titleCheck,\n            }))\n          )}\n          type=\"text\"\n          value={this.state.title}\n          onChange={this.handleChange}\n        />\n        {this.state.titleCheck\n        && <div className=\"error-message\">Please enter a title</div>}\n        <textarea\n          className=\"form-input\"\n          name=\"Description\"\n          placeholder=\"description\"\n          cols={10}\n          rows={5}\n          value={this.state.description}\n          onChange={this.handleChange}\n        />\n        <input\n          className=\"form-input\"\n          required\n          type=\"text\"\n          name=\"mgUrl\"\n          placeholder=\"ImgUrl\"\n          value={this.state.imgUrl}\n          onChange={this.handleChange}\n          onInvalid={() => (\n            this.setState(state => ({\n              imgUrlCheck: !state.imgUrlCheck,\n            }))\n          )}\n        />\n        {this.state.imgUrlCheck\n        && <div className=\"error-message\">Invaid imgUrl</div>}\n        <input\n          className=\"form-input\"\n          required\n          type=\"text\"\n          name=\"imdbUrl\"\n          placeholder=\"ImdbUrl\"\n          value={this.state.imdbUrl}\n          onChange={this.handleChange}\n          onInvalid={() => (\n            this.setState(state => ({\n              imdbUrlCheck: !state.imdbUrlCheck,\n            }))\n          )}\n        />\n        {this.state.imdbUrlCheck\n        && <div className=\"error-message\">Invalid imdbUrl</div>}\n        <input\n          className=\"form-input\"\n          required\n          type=\"text\"\n          name=\"imdbId\"\n          placeholder=\"ImdbId\"\n          value={this.state.imdbId}\n          onChange={this.handleChange}\n          onInvalid={() => (\n            this.setState(state => ({\n              imdbIdCheck: !state.imdbIdCheck,\n            }))\n          )}\n        />\n        {this.state.imdbIdCheck\n        && <div className=\"error-message\">Invalid imdbId</div>}\n        <button type=\"submit\" className=\"button\">\n          Add film\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(state => {\n      return {\n        movies: [...state.movies, movie],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAddMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}